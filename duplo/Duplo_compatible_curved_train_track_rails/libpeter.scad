

numbers=[ 

 [[0,0,0,0,0,0],
  [0,0,1,1,1,0], 
  [0,1,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,0,1,1,1,0]],

 [[0,0,0,0,0,0],
  [0,0,0,1,0,0], 
  [0,0,1,1,0,0], 
  [0,0,0,1,0,0], 
  [0,0,0,1,0,0], 
  [0,0,0,1,0,0], 
  [0,0,0,1,0,0], 
  [0,0,1,1,1,0]],

 [[0,0,0,0,0,0],
  [0,0,1,1,1,0], 
  [0,1,0,0,0,1], 
  [0,0,0,0,0,1], 
  [0,0,0,0,1,0], 
  [0,0,0,1,0,0], 
  [0,0,1,0,0,0], 
  [0,1,1,1,1,1]],

 [[0,0,0,0,0,0],
  [0,0,1,1,1,0], 
  [0,1,0,0,0,1], 
  [0,0,0,0,0,1], 
  [0,0,0,1,1,0], 
  [0,0,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,0,1,1,1,0]],

 [[0,0,0,0,0,0],
  [0,0,0,1,1,0], 
  [0,0,1,0,1,0], 
  [0,1,0,0,1,0], 
  [0,1,0,0,1,0], 
  [0,1,1,1,1,1], 
  [0,0,0,0,1,0], 
  [0,0,0,0,1,0]],

 [[0,0,0,0,0,0],
  [0,1,1,1,1,1], 
  [0,1,0,0,0,0], 
  [0,1,0,0,0,0], 
  [0,1,1,1,1,0], 
  [0,0,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,0,1,1,1,0]],

 [[0,0,0,0,0,0],
  [0,0,1,1,1,0], 
  [0,1,0,0,0,1], 
  [0,1,0,0,0,], 
  [0,1,1,1,1,0], 
  [0,1,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,0,1,1,1,0]],

 [[0,0,0,0,0,0],
  [0,1,1,1,1,1], 
  [0,1,0,0,0,1], 
  [0,0,0,0,1,0], 
  [0,0,0,1,0,0], 
  [0,0,0,1,0,0], 
  [0,0,0,1,0,0], 
  [0,0,0,1,0,0]],

 [[0,0,0,0,0,0],
  [0,0,1,1,1,0], 
  [0,1,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,0,1,1,1,0], 
  [0,1,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,0,1,1,1,0]],

 [[0,0,0,0,0,0],
  [0,0,1,1,1,0], 
  [0,1,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,0,1,1,1,1], 
  [0,0,0,0,0,1], 
  [0,1,0,0,0,1], 
  [0,0,1,1,1,0]],
];

module number(value,x,y,z,size,height,fatness){
   translate(v=[x,y,z]){
      scale(v=[0.75*size,size,height]){
         for ( iy = [0:7] ) {
            for (ix = [0:5] ) {
               if (numbers[value][iy][ix]==1)
               translate(v=[ix/6,(7-iy)/8,0])
               cube(size=[fatness/6,fatness/8,1/8]);
            }
         }
      }
   }
}

module flattop4pyramid(x,y,z,a,lx,ly,h1,h2){
   translate(v=[x,y,z]){
      rotate(a=a,v=[0,0,1]){
         difference(){
           scale(v=[lx,ly,h1])
			polyhedron(
			  points=[ [1,1,0],[1,0,0],
                    [0,0,0],[0,1,0], // the four points at base
			           [0.5,0.5,1]  ],         // the apex point 
			  triangles=[ [0,1,4],[1,2,4],
                         [2,3,4],[3,0,4],  // each triangle side
			              [1,0,3],[2,1,3] ] // two triangles for square base
			 );
            translate(v=[-1,-1,h2]){
               cube(size=[lx+2,ly+2,h1],center=False);
            }
         }
      }
   }
}

module supportbeam(x,y,z,a,lx,w){
   translate(v=[x,y,z]){
      rotate(a=a,v=[0,0,1]){
        scale(v=[lx,w,w]){
			polyhedron(
			  points=[ [0,0,0],[0,0,1],[0,1,1],
                      [1,0,0],[1,0,1],[1,1,1]],
			  triangles=[ [0,2,1],[3,4,5],
                         [0,4,3],[0,1,4],
                         [1,5,4],[1,2,5],
                         [0,3,5],[0,5,2] ] 
			 );
        }
      }
   }
}


module rectsupportingridge(x,y,z,a,xl,yl,w){
   translate(v=[x,y,z]){
      rotate(a=a,v=[0,0,1]){
         supportbeam(0,0,0,0,xl,w);
         supportbeam(xl,0,0,90,yl,w);
         supportbeam(xl,yl,0,180,xl,w);
         supportbeam(0,yl,0,270,yl,w);
      }
   }
}


  


f=1.5;
number(0,0,0,0,1,1,f);
number(1,1,0,0,1,1,f);
number(2,2,0,0,1,1,f);
number(3,3,0,0,1,1,f);
number(4,4,0,0,1,1,f);
number(5,5,0,0,1,1,f);
number(6,6,0,0,1,1,f);
number(7,7,0,0,1,1,f);
number(8,8,0,0,1,1,f);
number(9,9,0,0,1,1,f);

flattop4pyramid(0,2,0,0,8,8,4,1);

rectsupportingridge(9,5,0,0,4,3,0.4);

supportbeam(0,-5,0,0,1,1,1);